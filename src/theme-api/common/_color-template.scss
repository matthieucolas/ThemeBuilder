/// Creates a color mapping that is going to be used as a template for
/// userControl styles 
/// @param {*} $background 
/// @param {*} $foreground [null] 
/// @param {*} $border [null] 
/// @param {*} $outline [null] 

$IColorTemplate:(
    'background',
    'foreground',
    'border',
    'outline'
);

@function colorTemplate($background, $foreground: null, $border: null, $outline:null) {
    @return ( 'type':'colorTemplate',
              'background':   $background,
              'foreground':   $foreground,
              'border':       $border,
              'outline':      $outline
            );
}

/// Returns the background value of the colorTemplate mapping passed as a parameter 
/// @param {colorTemplate} $color-template 

@function colorTemplate_getBackground($color-template){
    @return map-get($color-template, 'background');
}

/// Returns the foreground value of the colorTemplate mapping passed as a parameter 
/// @param {colorTemplate} $color-template 

@function colorTemplate_getForeground($color-template){
    @return map-get($color-template, 'foreground');
}

/// Returns the borderColor value of the colorTemplate mapping passed as a parameter 
/// @param {colorTemplate} $color-template 

@function colorTemplate_getBorder($color-template){
    @return map-get($color-template, 'border');
}

/// Returns the outline value of the colorTemplate mapping passed as a parameter 
/// @param {colorTemplate} $color-template 

@function colorTemplate_getOutline($color-template){
    @return map-get($color-template, 'outline');
}

