/// Creates a mapping for several user control template states
/// @param {colorTemplate} $base [null] the base state of the control, must be of type colorTemplate
/// @param {colorTemplate} $hover [null] the hover state of the control, must be of type colorTemplate
/// @param {colorTemplate} $focus [null] the focus state of the control, must be of type colorTemplate
/// @param {colorTemplate} $active [null] the active state of the control, must be of type colorTemplate

@function userControlTemplate($base:null, $hover:null, $focus:null, $active:null){
    @return (
        'type':'userControlTemplate',
        'base':typeCheck('colorTemplate', $base),
        'hover':typeCheck('colorTemplate', $hover),
        'focus':typeCheck('colorTemplate', $focus),
        'active':typeCheck('colorTemplate', $active)
    )
};

/// Gets the base value from the control template mapping passed as a parameter
/// @param {userControlTemplate} $control-template 

@function getBaseUserControlTemplate($control-template){
    @return map-get(typeCheck('userControlTemplate', $control-template), 'base');
}

/// Gets the hover value from the control template mapping passed as a parameter
/// @param {userControlTemplate} $control-template 

@function getHoverUserControlTemplate($control-template){
    @return map-get(typeCheck('userControlTemplate', $control-template), 'hover');
}

/// Gets the focus value from the control template mapping passed as a parameter
/// @param {userControlTemplate} $control-template 

@function getFocusUserControlTemplate($control-template){
    @return map-get(typeCheck('userControlTemplate', $control-template), 'focus');
}

/// Gets the active value from the control template mapping passed as a parameter
/// @param {userControlTemplate} $control-template 

@function getActiveUserControlTemplate($control-template){
    @return map-get(typeCheck('userControlTemplate', $control-template), 'active');
}